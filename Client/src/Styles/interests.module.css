/* checkboxes */
.wrapper {
    --checkbox-size: 25px;
    --checkbox-color: #00ff88;
    --checkbox-shadow: rgba(0, 255, 136, 0.3);
    --checkbox-border: rgba(0, 255, 136, 0.7);
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    padding: 10px;
  }
  
  .wrapper input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  .wrapper .checkmark {
    position: relative;
    width: var(--checkbox-size);
    height: var(--checkbox-size);
    border: 2px solid var(--checkbox-border);
    border-radius: 8px;
    transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    display: flex;
    justify-content: center;
    align-items: center;
    background: rgba(0, 0, 0, 0.2);
    box-shadow: 0 0 15px var(--checkbox-shadow);
    overflow: hidden;
  }
  
  .wrapper .checkmark::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, var(--checkbox-color), #00ffcc);
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transform: scale(0) rotate(-45deg);
  }
  
  .wrapper input:checked ~ .checkmark::before {
    opacity: 1;
    transform: scale(1) rotate(0);
  }
  
  .wrapper .checkmark svg {
    width: 0;
    height: 0;
    color: #1a1a1a;
    z-index: 1;
    transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
  }
  
  .wrapper input:checked ~ .checkmark svg {
    width: 18px;
    height: 18px;
    transform: rotate(360deg);
  }
  
  .wrapper:hover .checkmark {
    border-color: var(--checkbox-color);
    transform: scale(1.1);
    box-shadow:
      0 0 20px var(--checkbox-shadow),
      0 0 40px var(--checkbox-shadow),
      inset 0 0 10px var(--checkbox-shadow);
  }
  
  .wrapper input:checked ~ .checkmark {
    animation: pulse 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
      box-shadow: 0 0 20px var(--checkbox-shadow);
    }
    50% {
      transform: scale(0.9);
      box-shadow:
        0 0 30px var(--checkbox-shadow),
        0 0 50px var(--checkbox-shadow);
    }
    100% {
      transform: scale(1);
      box-shadow: 0 0 20px var(--checkbox-shadow);
    }
  }
  
  .wrapper .label {
    margin-left: 15px;
    font-family: "Segoe UI", sans-serif;
    color: var(--checkbox-color);
    font-size: 18px;
    text-shadow: 0 0 10px var(--checkbox-shadow);
    opacity: 0.9;
    transition: all 0.3s;
  }
  
  .wrapper:hover .label {
    opacity: 1;
    transform: translateX(5px);
  }
  
  /* Glowing dots animation */
  .wrapper::after,
  .wrapper::before {
    content: "";
    position: absolute;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background: var(--checkbox-color);
    opacity: 0;
    transition: all 0.5s;
  }
  
  .wrapper::before {
    left: -10px;
    top: 50%;
  }
  
  .wrapper::after {
    right: -10px;
    top: 50%;
  }
  
  .wrapper:hover::before {
    opacity: 1;
    transform: translateX(-10px);
    box-shadow: 0 0 10px var(--checkbox-color);
  }
  
  .wrapper:hover::after {
    opacity: 1;
    transform: translateX(10px);
    box-shadow: 0 0 10px var(--checkbox-color);
  }
  /* checkboxes */

  /* codepan */

  .codepen {
    display: block;
    cursor: pointer;
    color: white;
    margin: 0 auto;
    position: relative;
    top: 10px;
    text-decoration: none;
    font-weight: 600;
    border-radius: 6px;
    overflow: hidden;
    padding: 3px;
    isolation: isolate;
    width: 10rem; 
  }
  
  .codepen::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 400%;
    height: 100%;
    background: linear-gradient(115deg,#4fcf70,#fad648,#a767e5,#44ce7b,#44ce7b);
    background-size: 25% 100%;
    animation: an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop .75s linear infinite;
    animation-play-state: paused;
    translate: -5% 0%;
    transition: translate 0.25s ease-out;
  }
  
  .codepen:hover::before {
    animation-play-state: running;
    transition-duration: 0.75s;
    translate: 0% 0%;
  }
  
  @keyframes an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop {
    to {
      transform: translateX(-25%);
    }
  }
  
  .codepen span {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 1.5rem;
    font-size: 1.1rem;
    background: #000;
    border-radius: 3px;
    height: 1.5rem;
    /* background-color: yellow; */
    width: 9.6rem;
  }

  /* button */

  .button {
    font-size: 18px;
    letter-spacing: 2px;
    text-transform: uppercase;
    display: inline-block;
    text-align: center;
    font-weight: bold;
    padding: 0.5em 1.5em;
    border: 3px solid #00ff88;
    border-radius: 2px;
    position: relative;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.1);
    color: #00ff88;
    text-decoration: none;
    transition: 0.3s ease all;
    z-index: 1;
  }
  
  .button:before {
    transition: 0.5s all ease;
    position: absolute;
    top: 0;
    left: 50%;
    right: 50%;
    bottom: 0;
    opacity: 0;
    content: '';
    background-color: #00ff88;
    z-index: -1;
  }
  
  .button:hover, .button:focus {
    color: black;
  }
  
  .button:hover:before, .button:focus:before {
    transition: 0.5s all ease;
    left: 0;
    right: 0;
    opacity: 1;
  }
  
  .button:active {
    transform: scale(0.9);
  }