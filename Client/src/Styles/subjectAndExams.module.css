.slideInEllipticLeftFwd {
    -webkit-animation: slide-in-elliptic-left-fwd 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            animation: slide-in-elliptic-left-fwd 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

@-webkit-keyframes slide-in-elliptic-left-fwd {
    0% {
      -webkit-transform: translateX(-800px) rotateY(30deg) scale(0);
              transform: translateX(-800px) rotateY(30deg) scale(0);
      -webkit-transform-origin: -100% 50%;
              transform-origin: -100% 50%;
      opacity: 0;
    }
    100% {
      -webkit-transform: translateX(0) rotateY(0) scale(1);
              transform: translateX(0) rotateY(0) scale(1);
      -webkit-transform-origin: 1800px 50%;
              transform-origin: 1800px 50%;
      opacity: 1;
    }
}
@keyframes slide-in-elliptic-left-fwd {
    0% {
      -webkit-transform: translateX(-800px) rotateY(30deg) scale(0);
              transform: translateX(-800px) rotateY(30deg) scale(0);
      -webkit-transform-origin: -100% 50%;
              transform-origin: -100% 50%;
      opacity: 0;
    }
    100% {
      -webkit-transform: translateX(0) rotateY(0) scale(1);
              transform: translateX(0) rotateY(0) scale(1);
      -webkit-transform-origin: 1800px 50%;
              transform-origin: 1800px 50%;
      opacity: 1;
    }
}


.slideInEllipticRightFwd {
	-webkit-animation: slideInEllipticRightFwd 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	        animation: slideInEllipticRightFwd 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}



/* ----------------------------------------------
 * Generated by Animista on 2025-2-20 19:23:20
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation slide-in-elliptic-right-fwd
 * ----------------------------------------
 */
 @-webkit-keyframes slideInEllipticRightFwd {
    0% {
      -webkit-transform: translateX(800px) rotateY(-30deg) scale(0);
              transform: translateX(800px) rotateY(-30deg) scale(0);
      -webkit-transform-origin: -100% 50%;
              transform-origin: -100% 50%;
      opacity: 0;
    }
    100% {
      -webkit-transform: translateX(0) rotateY(0) scale(1);
              transform: translateX(0) rotateY(0) scale(1);
      -webkit-transform-origin: -1800px 50%;
              transform-origin: -1800px 50%;
      opacity: 1;
    }
  }
  @keyframes slideInEllipticRightFwd {
    0% {
      -webkit-transform: translateX(800px) rotateY(-30deg) scale(0);
              transform: translateX(800px) rotateY(-30deg) scale(0);
      -webkit-transform-origin: -100% 50%;
              transform-origin: -100% 50%;
      opacity: 0;
    }
    100% {
      -webkit-transform: translateX(0) rotateY(0) scale(1);
              transform: translateX(0) rotateY(0) scale(1);
      -webkit-transform-origin: -1800px 50%;
              transform-origin: -1800px 50%;
      opacity: 1;
    }
  }

/* checkboxes */

  .neon {
    --primary: #00ffaa;
    --primary-dark: #00cc88;
    --primary-light: #88ffdd;
    --size: 30px;
    position: relative;
    width: var(--size);
    height: var(--size);
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
  }
  
  .neon input {
    display: none;
  }
  
  .frame {
    position: relative;
    width: 2rem;
    height: 2rem;
  }
  
  .box {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.8);
    border-radius: 4px;
    border: 2px solid var(--primary-dark);
    transition: all 0.4s ease;
  }

  .check{
    position: absolute;
    inset: 2px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .checkbox {
    width: 80%;
    height: 80%;
    fill: none;
    stroke: var(--primary);
    strokeWidth: 3;
    strokeLinecap: round;
    strokeLinejoin: round;
    stroke-dasharray: 40;
    stroke-dashoffset: 40;
    transform-origin: center;
    transition: all 0.4s cubic-bezier(0.16, 1, 0.3, 1);
  }
  
  .glow {
    position: absolute;
    inset: -2px;
    border-radius: 6px;
    background: var(--primary);
    opacity: 0;
    filter: blur(8px);
    transform: scale(1.2);
    transition: all 0.4s ease;
  }
  
  .borders {
    position: absolute;
    inset: 0;
    border-radius: 4px;
    overflow: hidden;
  }
  
  .borders span {
    position: absolute;
    width: 40px;
    height: 1px;
    background: var(--primary);
    opacity: 0;
    transition: opacity 0.4s ease;
  }
  
  .borders span:nth-child(1) {
    top: 0;
    left: -100%;
    animation: borderFlow1 2s linear infinite;
  }
  
  .borders span:nth-child(2) {
    top: -100%;
    right: 0;
    width: 1px;
    height: 40px;
    animation: borderFlow2 2s linear infinite;
  }
  
  .borders span:nth-child(3) {
    bottom: 0;
    right: -100%;
    animation: borderFlow3 2s linear infinite;
  }
  
  .borders span:nth-child(4) {
    bottom: -100%;
    left: 0;
    width: 1px;
    height: 40px;
    animation: borderFlow4 2s linear infinite;
  }
  
  .particles span {
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--primary);
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    top: 50%;
    left: 50%;
    box-shadow: 0 0 6px var(--primary);
  }
  
  .rings {
    position: absolute;
    inset: -20px;
    pointer-events: none;
  }
  
  .rings .ring {
    position: absolute;
    inset: 0;
    border-radius: 50%;
    border: 1px solid var(--primary);
    opacity: 0;
    transform: scale(0);
  }
  
  .sparks span {
    position: absolute;
    width: 20px;
    height: 1px;
    background: linear-gradient(90deg, var(--primary), transparent);
    opacity: 0;
    transform-origin: left center;
    transition: all 0.4s ease;
    pointer-events: none;
    z-index: 10;
  }
  
  
  /* Hover Effects */
  .neon-checkbox:hover .box {
    border-color: var(--primary);
    transform: scale(1.05);
  }
  
  /* Checked State */
  .neon input:checked ~ .frame .box {
    border-color: var(--primary);
    background: rgba(0, 255, 170, 0.1);
  }
  
  .neon input:checked ~ .frame .checkbox {
    stroke-dashoffset: 0;
    transform: scale(1.1);
  }
  
  .neon input:checked ~ .frame .glow {
    opacity: 0.2;
  }
  
  .neon-checkbox
    input:checked
    ~ .frame
    .borders
    span {
    opacity: 1;
  }
  
  /* Particle Animations */
  .neon-checkbox
    input:checked
    ~ .frame
    .particles
    span {
    animation: particleExplosion 0.6s ease-out forwards;
  }
  
  .neon-checkbox
    input:checked
    ~ .frame
    .rings
    .ring {
    animation: ringPulse 0.6s ease-out forwards;
  }
  
  .neon-checkbox
    input:checked
    ~ .frame
    .sparks
    span {
    animation: sparkFlash 0.6s ease-out forwards;
  }
  
  /* Animations */
  @keyframes borderFlow1 {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(200%);
    }
  }
  
  @keyframes borderFlow2 {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(200%);
    }
  }
  
  @keyframes borderFlow3 {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-200%);
    }
  }
  
  @keyframes borderFlow4 {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-200%);
    }
  }
  
  @keyframes particleExplosion {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
    }
    20% {
      opacity: 1;
    }
    100% {
      transform: translate(
          calc(-50% + var(--x, 20px)),
          calc(-50% + var(--y, 20px))
        )
        scale(0);
      opacity: 0;
    }
  }
  
  @keyframes ringPulse {
    0% {
      transform: scale(0);
      opacity: 1;
    }
    100% {
      transform: scale(2);
      opacity: 0;
    }
  }
  
  @keyframes sparkFlash {
    0% {
      transform: rotate(var(--r, 0deg)) translateX(0) scale(1);
      opacity: 1;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: rotate(var(--r, 0deg)) translateX(60px) scale(0);
      opacity: 0;
    }
  }
  
  
  /* Particle Positions */
  .particles span:nth-child(1) {
    --x: 25px;
    --y: -25px;
  }
  .particles span:nth-child(2) {
    --x: -25px;
  }
  .particles span:nth-child(3) {
    --x: 25px;
    --y: 25px;
  }
  .particles span:nth-child(4) {
    --x: -25px;
    --y: 25px;
  }
  .particles span:nth-child(5) {
    --x: 35px;
}
  .particles span:nth-child(6) {
    --x: -35px;
    --y: 0px;
  }
  .particles span:nth-child(7) {
    --x: 0px;
    --y: 35px;
  }
  .particles span:nth-child(8) {
    --x: 0px;
    --y: -35px;
  }
  .particles span:nth-child(9) {
    --x: 20px;
    --y: -30px;
  }
  .particles span:nth-child(10) {
    --x: -20px;
    --y: 30px;
  }
  .particles span:nth-child(11) {
    --x: 30px;
    --y: 20px;
  }
  .particles span:nth-child(12) {
    --x: -30px;
    --y: -20px;
  }
  
  /* Spark Rotations */
  .sparks span {
    transform-origin: center;
    transform: rotate(var(--r, 0deg)) translateX(0) scale(1);
  }
  
  .sparks span:nth-child(1) {
    --r: 0deg;
    top: 50%;
    left: 50%;
  }
  .sparks span:nth-child(2) {
    --r: 90deg;
    top: 50%;
    left: 50%;
  }
  .sparks span:nth-child(3) {
    --r: 180deg;
    top: 50%;
    left: 50%;
  }
  .sparks span:nth-child(4) {
    --r: 270deg;
    top: 50%;
    left: 50%;
  }
  
  
  
  /* Ring Delays */
  .rings .ring:nth-child(1) {
    animation-delay: 0s;
  }
  .rings .ring:nth-child(2) {
    animation-delay: 0.1s;
  }
  .rings .ring:nth-child(3) {
    animation-delay: 0.2s;
  }

  .neon input:checked ~ .frame .sparks span {
    animation: sparkFlash 0.6s ease-out forwards;
  }


  .btn {
    font-size: 1.7rem;
    background: transparent;
    border: none;
    padding: 1em 1.5em;
    color: #00ff88;
    text-transform: uppercase;
    position: relative;
    transition: 0.5s ease;
    cursor: pointer;
  }
  
  .btn::before {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    height: 2px;
    width: 0;
    background-color: rgb(131, 243, 131);
    transition: 0.5s ease;
  }
  
  .btn:hover {
    color: #1e1e2b;
    transition-delay: 0.5s;
  }
  
  .btn:hover::before {
    width: 100%;
  }
  
  .btn::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    height: 0;
    width: 100%;
    background-color: rgb(131, 243, 131);
    transition: 0.4s ease;
    z-index: -1;
  }
  
  .btn:hover::after {
    height: 100%;
    transition-delay: 0.4s;
    color: aliceblue;
  }
  


/* exams checkbox */

.wrapper {
  --checkbox-size: 25px;
  --checkbox-color: #00ff88;
  --checkbox-shadow: rgba(0, 255, 136, 0.3);
  --checkbox-border: rgba(0, 255, 136, 0.7);
  display: flex;
  align-items: center;
  position: relative;
  cursor: pointer;
  padding: 10px;
}

.wrapper input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.wrapper .checkmark {
  position: relative;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border: 2px solid var(--checkbox-border);
  border-radius: 8px;
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(0, 0, 0, 0.2);
  box-shadow: 0 0 15px var(--checkbox-shadow);
  overflow: hidden;
}

.wrapper .checkmark::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, var(--checkbox-color), #00ffcc);
  opacity: 0;
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  transform: scale(0) rotate(-45deg);
}

.wrapper input:checked ~ .checkmark::before {
  opacity: 1;
  transform: scale(1) rotate(0);
}

.wrapper .checkmark svg {
  width: 0;
  height: 0;
  color: #1a1a1a;
  z-index: 1;
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
}

.wrapper input:checked ~ .checkmark svg {
  width: 18px;
  height: 18px;
  transform: rotate(360deg);
}

.wrapper:hover .checkmark {
  border-color: var(--checkbox-color);
  transform: scale(1.1);
  box-shadow:
    0 0 20px var(--checkbox-shadow),
    0 0 40px var(--checkbox-shadow),
    inset 0 0 10px var(--checkbox-shadow);
}

.wrapper input:checked ~ .checkmark {
  animation: pulse 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes pulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 20px var(--checkbox-shadow);
  }
  50% {
    transform: scale(0.9);
    box-shadow:
      0 0 30px var(--checkbox-shadow),
      0 0 50px var(--checkbox-shadow);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 20px var(--checkbox-shadow);
  }
}

.wrapper .label {
  margin-left: 15px;
  font-family: "Segoe UI", sans-serif;
  color: var(--checkbox-color);
  font-size: 18px;
  text-shadow: 0 0 10px var(--checkbox-shadow);
  opacity: 0.9;
  transition: all 0.3s;
}

.wrapper:hover .label {
  opacity: 1;
  transform: translateX(5px);
}

/* Glowing dots animation */
.wrapper::after,
.wrapper::before {
  content: "";
  position: absolute;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  background: var(--checkbox-color);
  opacity: 0;
  transition: all 0.5s;
}

.wrapper::before {
  left: -10px;
  top: 50%;
}

.wrapper::after {
  right: -10px;
  top: 50%;
}

.wrapper:hover::before {
  opacity: 1;
  transform: translateX(-10px);
  box-shadow: 0 0 10px var(--checkbox-color);
}

.wrapper:hover::after {
  opacity: 1;
  transform: translateX(10px);
  box-shadow: 0 0 10px var(--checkbox-color);
}

/* buttons */
.button {
  display: flex;
}

.box {
  width: 40px;
  height: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 15px;
  font-weight: 800;
  color: black;
  transition: all .8s;
  cursor: pointer;
  position: relative;
  background: #00ff88;
  overflow: hidden;
}

.box:before {
  content: "D";
  position: absolute;
  top: 0;
  background: #00ff88;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateY(100%);
  transition: transform .4s;
}

.box:nth-child(2)::before {
  transform: translateY(-100%);
  content: 'R';
}

.box:nth-child(3)::before {
  content: 'I';
}

.box:nth-child(4)::before {
  transform: translateY(-100%);
  content: 'V';
}

.box:nth-child(5)::before {
  content: 'E';
}

.button:hover .box:before {
  transform: translateY(0);
}


.button {
  font-size: 18px;
  letter-spacing: 2px;
  text-transform: uppercase;
  display: inline-block;
  text-align: center;
  font-weight: bold;
  padding: 0.5em 1.5em;
  border: 3px solid #00ff88;
  border-radius: 2px;
  position: relative;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.1);
  color: #00ff88;
  text-decoration: none;
  transition: 0.3s ease all;
  z-index: 1;
}

.button:before {
  transition: 0.5s all ease;
  position: absolute;
  top: 0;
  left: 50%;
  right: 50%;
  bottom: 0;
  opacity: 0;
  content: '';
  background-color: #00ff88;
  z-index: -1;
}

.button:hover, .button:focus {
  color: black;
}

.button:hover:before, .button:focus:before {
  transition: 0.5s all ease;
  left: 0;
  right: 0;
  opacity: 1;
}

.button:active {
  transform: scale(0.9);
}


.codepen {
  display: block;
  color: white;
  margin: 0 auto;
  position: relative;
  left: 3px;
  margin-bottom: 20px;
  text-decoration: none;
  font-weight: 600;
  border-radius: 6px;
  overflow: hidden;
  padding: 3px;
  isolation: isolate;
  width: 18.5rem; 
}

.codepen::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 400%;
  height: 100%;
  background: linear-gradient(115deg,#4fcf70,#fad648,#a767e5,#44ce7b,#44ce7b);
  background-size: 25% 100%;
  animation: an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop .75s linear infinite;
  animation-play-state: paused;
  translate: -5% 0%;
  transition: translate 0.25s ease-out;
}

.codepen:hover::before {
  animation-play-state: running;
  transition-duration: 0.75s;
  translate: 0% 0%;
}

@keyframes an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop {
  to {
    transform: translateX(-25%);
  }
}

.codepen span {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem 1.5rem;
  font-size: 1.1rem;
  background: #000;
  border-radius: 3px;
  height: 1.5rem;
  width: 18rem;
}
  
  
